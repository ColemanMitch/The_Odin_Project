{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ColeMitchell/Documents/TheOdinProject/javascript/cv-project/src/components/Editablefield.js\";\n// Editablefield.js\nimport React, { Component } from 'react';\n\nclass Editablefield extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      this.setState({\n        text: this.state.text,\n        isEditing: true\n      });\n    };\n\n    this.handleBlur = () => {\n      this.save();\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        text: e.target.value\n      });\n    };\n\n    this.enter = e => {\n      if (e.keyCode === 13) {\n        this.save();\n      }\n    };\n\n    this.save = props => {\n      this.setState({\n        text: this.state.text,\n        isEditing: false\n      });\n\n      if (this.state.text === '') {\n        this.setState({\n          text: this.state.default\n        });\n      }\n    };\n\n    this.state = {\n      text: props.value,\n      isEditing: false,\n      tag: props.tag,\n      default: props.value\n    };\n  }\n\n  render() {\n    return this.state.isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: this.state.text,\n      autoFocus: true,\n      onBlur: this.handleBlur,\n      onChange: this.handleChange,\n      onKeyDown: this.enter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(this.state.tag, {\n      onClick: this.handleClick,\n      children: this.state.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Editablefield;","map":{"version":3,"sources":["/Users/ColeMitchell/Documents/TheOdinProject/javascript/cv-project/src/components/Editablefield.js"],"names":["React","Component","Editablefield","constructor","props","handleClick","setState","text","state","isEditing","handleBlur","save","handleChange","e","target","value","enter","keyCode","default","tag","render"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEI,MAAMC,aAAN,SAA4BD,SAA5B,CAAqC;AACrCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAUnBC,WAVmB,GAUL,MAAM;AAChB,WAAKC,QAAL,CAAc;AACVC,QAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWD,IADP;AAEVE,QAAAA,SAAS,EAAE;AAFD,OAAd;AAIH,KAfkB;;AAAA,SAiBnBC,UAjBmB,GAiBN,MAAM;AACf,WAAKC,IAAL;AACH,KAnBkB;;AAAA,SAqBnBC,YArBmB,GAqBHC,CAAD,IAAO;AAClB,WAAKP,QAAL,CAAc;AACVC,QAAAA,IAAI,EAAEM,CAAC,CAACC,MAAF,CAASC;AADL,OAAd;AAGH,KAzBkB;;AAAA,SA2BnBC,KA3BmB,GA2BVH,CAAD,IAAO;AACX,UAAGA,CAAC,CAACI,OAAF,KAAc,EAAjB,EAAqB;AACjB,aAAKN,IAAL;AACH;AACJ,KA/BkB;;AAAA,SAiCnBA,IAjCmB,GAiCXP,KAAD,IAAW;AACd,WAAKE,QAAL,CAAc;AACVC,QAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWD,IADP;AAEVE,QAAAA,SAAS,EAAE;AAFD,OAAd;;AAKA,UAAG,KAAKD,KAAL,CAAWD,IAAX,KAAoB,EAAvB,EAA0B;AACtB,aAAKD,QAAL,CAAc;AACVC,UAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWU;AADP,SAAd;AAGH;AACJ,KA5CkB;;AAEf,SAAKV,KAAL,GAAa;AACTD,MAAAA,IAAI,EAAEH,KAAK,CAACW,KADH;AAETN,MAAAA,SAAS,EAAE,KAFF;AAGTU,MAAAA,GAAG,EAAEf,KAAK,CAACe,GAHF;AAITD,MAAAA,OAAO,EAAEd,KAAK,CAACW;AAJN,KAAb;AAMH;;AAsCDK,EAAAA,MAAM,GAAG;AACL,WACI,KAAKZ,KAAL,CAAWC,SAAX,gBACA;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWD,IAFtB;AAGI,MAAA,SAAS,EAAE,IAHf;AAII,MAAA,MAAM,EAAE,KAAKG,UAJjB;AAKI,MAAA,QAAQ,EAAE,KAAKE,YALnB;AAMI,MAAA,SAAS,EAAE,KAAKI;AANpB;AAAA;AAAA;AAAA;AAAA,YADA,gBAUA,aAAM,KAAN,CAAY,GAAZ;AAAgB,MAAA,OAAO,EAAE,KAAKX,WAA9B;AAAA,gBAA4C,KAAKG,KAAL,CAAWD;AAAvD;AAAA;AAAA;AAAA;AAAA,YAXJ;AAaH;;AA7DoC;;AAiEzC,eAAeL,aAAf","sourcesContent":["// Editablefield.js\nimport React, {Component} from 'react'\n\n    class Editablefield extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            text: props.value,\n            isEditing: false,\n            tag: props.tag,\n            default: props.value\n        }\n    }\n\n    handleClick = () => {\n        this.setState({\n            text: this.state.text,\n            isEditing: true\n        })\n    }\n\n    handleBlur = () => {\n        this.save()\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            text: e.target.value\n        })\n    }\n\n    enter = (e) => {\n        if(e.keyCode === 13) {\n            this.save()\n        }\n    }\n\n    save = (props) => {\n        this.setState({\n            text: this.state.text,\n            isEditing: false\n        })\n\n        if(this.state.text === ''){\n            this.setState({\n                text: this.state.default\n            })\n        }\n    }\n\n    render() {\n        return(\n            this.state.isEditing ?\n            <input \n                type=\"text\" \n                value={this.state.text}\n                autoFocus={true}\n                onBlur={this.handleBlur}\n                onChange={this.handleChange}\n                onKeyDown={this.enter}\n            /> \n            :\n            <this.state.tag onClick={this.handleClick}>{this.state.text}</this.state.tag>\n        )\n    }\n\n}\n\nexport default Editablefield;"]},"metadata":{},"sourceType":"module"}